name: Redzone - iOS

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ "main" ]
    paths: [ "Redzone-iOS/**", ".github/workflows/redzone-ios.yml" ]
  pull_request:
    branches: [ "main" ]
    paths: [ "Redzone-iOS/**", ".github/workflows/redzone-ios.yml" ]

jobs:
  xcode:
    runs-on: macos-26
    defaults:
      run:
        working-directory: ./Redzone-iOS

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1.6.0
        with:
          xcode-version: ^26
      - name: Setup Homebrew
        uses: tecolicom/actions-use-homebrew-tools@v1.3
        with:
          tools: 'periphery xcbeautify'
      - name: Setup SPM
        uses: actions/cache@v3
        with:
          path: ./Redzone-iOS/.packages
          key: ${{ runner.os }}-packages-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-packages-
      - name: Setup certificates
        run: |
          echo -n '${{ secrets.IOS_DIST_P12_BASE64 }}' | base64 -D -i - -o $RUNNER_TEMP/cert.p12
          PASSWORD=$(uuidgen)
          KEYCHAIN_PATH=$RUNNER_TEMP/signing.keychain-db
          security create-keychain -p $PASSWORD $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p $PASSWORD $KEYCHAIN_PATH
          security import $RUNNER_TEMP/cert.p12 -P '${{ secrets.IOS_DIST_P12_PASSWORD }}' -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          security find-identity -v -p codesigning
      - name: Setup provisioning profiles
        shell: zsh {0}
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          tar -xf =( echo -n '${{ secrets.IOS_MOBILEPROVISION_TGZ_BASE64 }}' | base64 -D -i - -o - ) -C ~/Library/MobileDevice/Provisioning\ Profiles
          ls -l ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Resolve package dependencies
        run: set -o pipefail && NSUnbufferedIO=YES xcodebuild -resolvePackageDependencies -disableAutomaticPackageResolution -clonedSourcePackagesDirPath "./.packages" 2>&1 | xcbeautify --renderer github-actions
      - name: Compile sources & run tests
        run: set -o pipefail && NSUnbufferedIO=YES xcodebuild test -scheme "Redzone (Debug)" -project "Redzone.xcodeproj" -destination "platform=iOS Simulator,OS=26.0,name=iPhone Air" -derivedDataPath "./.build" -disableAutomaticPackageResolution -clonedSourcePackagesDirPath "./.packages" 2>&1 | xcbeautify --renderer github-actions
      - name: Periphery scan
        run: periphery scan --skip-build --index-store-path "./.build" # Periphery will read the config YAML file and merge it with these CLI args
