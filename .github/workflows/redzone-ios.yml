name: Redzone - iOS

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ "main" ]
    paths: [ "Redzone-iOS/**", ".github/workflows/redzone-ios.yml" ]
  pull_request:
    branches: [ "main" ]
    paths: [ "Redzone-iOS/**", ".github/workflows/redzone-ios.yml" ]

jobs:
  xcode:
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./Redzone-iOS

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1.3.0
        with:
          xcode-version: ^16
      - name: Setup Homebrew
        uses: tecolicom/actions-use-homebrew-tools@v1.3
        with:
          tools: 'periphery xcbeautify'
      - name: Setup SPM
        uses: actions/cache@v3
        with:
          path: ./Redzone-iOS/.packages
          key: ${{ runner.os }}-packages-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-packages-
      - name: Resolve package dependencies
        run: set -o pipefail && xcodebuild -resolvePackageDependencies -disableAutomaticPackageResolution -clonedSourcePackagesDirPath "./.packages" | xcbeautify --renderer github-actions
      - name: Compile sources
        run: set -o pipefail && xcodebuild build-for-testing -scheme "Redzone" -project "Redzone.xcodeproj" -destination "platform=iOS Simulator,OS=18.2,name=iPhone 16" -derivedDataPath "./.build" -disableAutomaticPackageResolution -clonedSourcePackagesDirPath "./.packages" | xcbeautify --renderer github-actions
      - name: Run tests
        run: set -o pipefail && xcodebuild test-without-building -scheme "Redzone" -project "Redzone.xcodeproj" -destination "platform=iOS Simulator,OS=18.2,name=iPhone 16" -derivedDataPath "./.build" -disableAutomaticPackageResolution -clonedSourcePackagesDirPath "./.packages" | xcbeautify --renderer github-actions
      - name: Periphery scan
        run: periphery scan --skip-build --index-store-path "./.build" # Periphery will read the config YAML file and merge it with these CLI args
